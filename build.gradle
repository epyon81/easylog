plugins {
    id 'net.researchgate.release' version '2.4.0'
    id "com.jfrog.bintray" version "1.7.2"
}

apply plugin: 'distribution'

def easylogGithubRepo = 'epyon81/easylog'

def pomConfig = {
    url "https://github.com/$easylogGithubRepo"

    scm {
        url "https://github.com/epyon81/${easylogGithubRepo}.git"
    }

    licenses {
        license {
            name 'MIT'
            url "https://github.com/$easylogGithubRepo/blob/master/LICENSE"
            distribution 'repo'
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'com.jfrog.bintray'

    group 'com.github.epyon81.easylog'

    ext {
        junitVersion = '4.12'
        byteBuddyVersion = '1.3.10'
        juelVersion = '2.2.7'
        assertjVersion = '3.5.2'
        mockitoVersion = '2.1.0-beta.120'
        springVersion = '4.2.5.RELEASE'
        aspectjVersion = '1.8.9'
        slf4jVersion = '1.7.21'
        guiceVersion = '4.0'
        javaeeVersion = '7.0'
        reflectionsVersion = '0.9.10'
    }

    sourceCompatibility = 1.8

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar, javadocJar
    }

    repositories {
        jcenter()
        maven { url 'http://repository.jboss.org/nexus/content/groups/public' }
        maven { url 'http://repository.jboss.org/nexus/content/repositories/deprecated' }
        maven { url 'http://repo.jfrog.org/artifactory/repo' }
    }

    dependencies {
        testCompile "junit:junit:$junitVersion"
        testCompile "org.assertj:assertj-core:$assertjVersion"
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                artifact sourcesJar
                artifact javadocJar

                pom.withXml {
                    def root = asNode()
                    root.appendNode('description', project.description)
                    root.children().last() + pomConfig
                }
            }
        }
    }

    bintray {
        user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

        publications = ['mavenJava']
        publish = true

        pkg {
            githubRepo = easylogGithubRepo
            repo = 'maven'
            name = project.name
            websiteUrl = "https://github.com/$easylogGithubRepo"
            issueTrackerUrl = "https://github.com/$easylogGithubRepo/issues"
            vcsUrl = "https://github.com/epyon81/${easylogGithubRepo}.git"
            licenses = ['MIT']
            publicDownloadNumbers = true

            version {
                vcsTag = "v$project.version"
            }
        }
    }

    project.afterEvaluate {
        bintray.pkg.desc = project.description
    }
}

distributions {
    main {
        contents {
            subprojects.each { sp ->
                into(sp.name) {
                    into('lib') {
                        from sp.configurations.runtime
                    }
                    from sp.jar
                }
            }
        }
    }
}

release {
    tagTemplate = 'v${version}'
}

afterReleaseBuild.dependsOn subprojects.bintrayUpload

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}